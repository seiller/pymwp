FileAST(ext=[FuncDef(decl=Decl(name='main', quals=[ ], align=[ ], storage=[ ], funcspec=[ ], type=FuncDecl(args=ParamList(params=[Decl(name='x', quals=[ ], align=[ ], storage=[ ], funcspec=[ ], type=TypeDecl(declname='x', quals=[ ], align=None, type=IdentifierType(names=['int' ] ) ), init=None, bitsize=None ), Decl(name='y', quals=[ ], align=[ ], storage=[ ], funcspec=[ ], type=TypeDecl(declname='y', quals=[ ], align=None, type=IdentifierType(names=['int' ] ) ), init=None, bitsize=None ) ] ), type=TypeDecl(declname='main', quals=[ ], align=None, type=IdentifierType(names=['void' ] ) ) ), init=None, bitsize=None ), param_decls=None, body=Compound(block_items=[FuncCall(name=ID(name='assume' ), args=ExprList(exprs=[BinaryOp(op='==', left=ID(name='x' ), right=Constant(type='int', value='0' ) ) ] ) ), Assignment(op='=', lvalue=ID(name='y' ), rvalue=BinaryOp(op='*', left=ID(name='x' ), right=Constant(type='int', value='10' ) ) ), FuncCall(name=ID(name='assert' ), args=ExprList(exprs=[BinaryOp(op='==', left=ID(name='y' ), right=ID(name='x' ) ) ] ) ) ] ) ) ] )